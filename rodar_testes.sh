# Host do sistema a ser testado
HOST="http://localhost:8080"

# Quantas repeti√ß√µes por cen√°rio
REPS=30

# Defini√ß√£o dos cen√°rios: nome, usu√°rios, dura√ß√£o, taxa de ramp-up
declare -A CENARIOS
CENARIOS["A"]="50 10 10m"
CENARIOS["B"]="100 20 10m"
CENARIOS["C"]="200 40 5m"

for cenario in "${!CENARIOS[@]}"; do
    read users ramp time <<< "${CENARIOS[$cenario]}"
    echo "üöÄ Executando CEN√ÅRIO ${cenario} (${users} usu√°rios por ${time})"

    for i in $(seq 1 $REPS); do
        echo "‚û°Ô∏è  Execu√ß√£o ${i}/${REPS}"

        # üîÅ Reinicia os containers que cont√™m os bancos em mem√≥ria
        echo "‚ôªÔ∏è Reiniciando ambiente para estado inicial..."
        docker compose restart customers-service visits-service vets-service
        sleep 10  # aguarda o bootstrap e o repovoamento do HSQLDB

        CSV_PREFIX="resultados/${cenario}_${i}"
        mkdir -p resultados

        locust -f locustfile.py --headless \
            -u $users -r $ramp -t $time \
            --host=$HOST --csv=$CSV_PREFIX \
            > "${CSV_PREFIX}.log" 2>&1

        echo "‚úÖ Execu√ß√£o ${i} finalizada ‚Äî CSV salvo em ${CSV_PREFIX}_stats.csv"
    done
done

echo "üèÅ Todos os testes finalizados!"
